export enum SwaggerComments {
	CREATE_CONTENT = "Content generates with this prompts:\n\n Create a ${body.textType} about ${body.topic} in ${body.size} words using this keywords '${body.keywords}' and '${body.terms}' terms.\n\n And optional titles with this prompt: Create a ${title} for this ${body.textType}: ${result.result}.\n\n Where result.result is text generated with first prompt and title is one of optionalTitles.\n\n Requires JWT token in header.",
	CREATE_CONTENT_WITH_SUBJECT_DIALOG = "Content generates with this prompts:\n\n Create a ${body.textType} about ${body.topic} in ${body.size} words using this keywords '${body.keywords}' and '${body.terms}' terms. Additionally, the content is enriched with a subject dialog, providing more detailed information.\n\n The subject dialog includes responses to the prompt: 'Create a ${body.topic} ${body.textType} using these '${body.keywords}' keywords. Always complete sentences'.\n\n Optional titles can be generated with the prompt: 'Create a ${title} for this ${body.textType}: ${result.result}'. Here, 'result.result' represents the text generated with the first prompt, and 'title' is one of the optionalTitles.\n\n This operation requires a JWT token in the header. Additionally, the following parameters are supported:\n - 'subject': The subject of the content.\n - 'images': A flag to indicate whether to generate images.\n - 'quantityImage': The number of images to generate.",
	UPDATE_CHATBOT = 'To update a chat bot, optionally you can \n\n add  new  chatBotName, askMe, button, tone, style  ',
	UPLOAD_IMAGE = 'Upload an image for your chatbot',
	CREATE_SUBJECT = 'Create subject for content',
	UPDATE_SUBJECT = 'Update a subject by id',
	GET_ALL_MODELS = 'Returns all modells from db AI',
	BLOCKED_ASSET = 'Blocked asset by type (chatbot name) ',
	UNBLOCKED_ASSET = 'Unblocked asset by type (chatbot name) ',
	IMPORT_PAGE = 'Import a new page for crawling your chatbot',
	CREATE_CHATBOT = "To generate a chat bot, you must add the 'domain' of the site for which the chat bot is being made \n\n  and 'style' is the appearance of the chat bot.\n\n  Optionally you can add 'button', 'askme' . ",
	GET_CONTENT_BY_ID = 'Returns previously generated content by id \n\n GET http://api.coderfy.com/content/36d43cee-a723-412b-91da-db6f5a8d547a',
	GET_CHATBOT_BY_ID = 'Returns previously generated chatBot by id',
	GET_LOGS_BY_ID = 'Returns log-message  by id from MONGODB',
	GET_ALL_LOGS = 'Returns all logs message from mongoDB',
	GET_ALL_CHATBOT = 'Returns all chatBots on admin panel',
	DELETE_CONTENT_BY_ID = 'Deletes previously generated content by id \n\n DELETE http://api.coderfy.com/content/36d43cee-a723-412b-91da-db6f5a8d547a',
	DELETE_SUBJECT_BY_ID = 'Deletes subject by id \n\n DELETE http://api.coderfy.com/subject/36d43cee-a723-412b-91da-db6f5a8d547a',
	DELETE_CHATBOT_BY_ID = 'Deletes previously generated chatbot by id',
	DELETE_USER_BY_ID = 'Deletes previously generated user by id',
	GET_USER_INFO = 'Returns user info. Auth required \n\n GET http://api.coderfy.com/users',
	GET_LEAD_INFO = 'Returns all leads info. ',
	CREATE_STYLE = 'Add new css properties to data base ',
	CREATE_SCRIPT = 'Add new javascript to data base ',
	DELETED_LEAD_INFO_BY_ID = 'Deleted lead info by id. ',
	GET_ALL_STRUCTURE = ' Return all structur to style chatbot',
	GET_STRUCTURE_BY_ID = ' Return  structur by id  with styleCss for chatbot',
	GET_LEAD_INFO_BY_ID = 'Returns lead info by id. ',
	EXPORT_BY_IDS_SNIPPETS = 'Exports snippets by ids. Auth required \n\n POST http://api.coderfy.com/content/export',
	GET_COUNT_NOT_VECTORIZED_SNIPPETS = 'Returns count of not vectorized snippets',
	UPDATE_CONTENT_BY_ID = 'Updates previously generated content by id \n\n PUT http://api.coderfy.com/content/36d43cee-a723-412b-91da-db6f5a8d547a',
	GET_ALL_CONTENT = 'Returns all previously generated content \n\n GET http://api.coderfy.com/content',
	FORGOT_PASSWORD = 'To reset the password needed a domain and email',
	UPDATE_PASWORD = 'By clicking on the link from the mail, we update the password.',
	NAME = 'ThisIsMyName',
	DELETE_USER = 'Auth required no parametrs needed',
	CHECK_PASSWORD = 'Check password for user. Auth required \n\n POST http://api.coderfy.com/auth/password/check',
	UPDATE_USER = 'For updating the user, you need to log in and enter a new password, email, username',
	EMAIL = 'email@email.com',
	MESSAGE = 'I love your product! Keep up the good work! :)',
	FEEDBACK_CREATE = 'Creates feedback. Auth required \n\n POST http://api.coderfy.com/feedback/create',
	FEEDBACK_GET_ALL = 'Returns all feedbacks \n\n GET http://api.coderfy.com/feedback',
	FEEDBACK_GET_BY_ID = 'Returns  feedback by id ',
	CREATE_OPTIONAL_TITLE = 'Creates optional title for content. Auth required. Pass one title per request. contentID is ID of text that was returned by content/create request\n\n POST http://api.coderfy.com/content/optional-title',
	REFRESH_TOKEN = 'Refreshes JWT token. Takes previous token and returns new token that has extended expire date \n\n POST http://api.coderfy.com/auth/refresh-token',
	CONFIRM_EMAIL_WITH_CODE = 'Send code from email to confirm email. Returns user and token\n\n',
	RESEND_EMAIL = 'Resend email code to confirm email. No params needed \n\n',
	SUBJECT = 'Subject for feedback',
	CREATE_HTML_CONTENT = 'Creates content in html format with styling and images(some of them can be not available).\n\n As a possible solution for embeding this content on the web page you can use <iframe></iframe> tag.\n\n Auth required\n\n\nCreates the content with this prompt\n\n\nCreate a ${dto.textType} in html format about ${dto.topic}. \n\nIt must contain ${dto.keywords} keywords. \n\n${dto.addImages && "Add images from the internet that will correspond the topic"}\n\n Add styling only with ${dto.stylingFramework}.\n\nRemove all possible characters to save space',
	GET_ALL_CHATBOTS = 'Returns all chatbots for authenticated user. Auth required\n\n',
	GET_ONE_CHATBOT = 'Returns one chatbot for authenticated user. You can get only chatbots that belongs to you. Auth required\n\n',
	IS_TOKEN_VALID = 'Returns 200 if token is valid and 403 if token is invalid',
	CREATE_PRODUCT = 'Creates product. Auth required, admin only\n\n',
	FIND_PRODUCT_BY_ID = 'Returns product by id. Auth required\n\n',
	FIND_STYLE_BY_NAME = 'Returns style by name. Auth required\n\n',
	FIND_SCRIPT_BY_ID = 'Returns script by id. Auth required\n\n',
	FIND_STRUCTURE_BY_ID = 'Returns structure by id. Auth required\n\n',
	FIND_ALL_PRODUCTS = 'Returns all products. Auth required\n\n',
	FIND_PRODUCT_BY_CATEGORY = 'Returns all products by category\n\n',
	UPDATE_PRODUCT_BY_ID = 'Updates product by id.\n\n',
	UPDATE_STYLE_BY_ID = 'Updates style by id.\n\n',
	UPDATE_SCRIPT_BY_ID = 'Updates script by id.\n\n',
	UPDATE_STRUCTURE_BY_ID = 'Updates structure by id.\n\n',
	DELETE_PRODUCT_BY_ID = 'Deletes product by id.\n\n',
	DELETE_STYLE_BY_ID = 'Deletes style by id.\n\n',
	DELETE_SCRIPT_BY_ID = 'Deletes SCRIPT by id.\n\n',
	DELETE_STRUCTURE_BY_ID = 'Deletes structure by id.\n\n',
	DELETE_ALL_LOGS = 'Deletes all logs. Auth required, Admin Only\n\n',
	RETRIEVE_PURCHASED_PRODUCT_CONTENT = 'Retrieves purchased content product. TOTP code required\n\n',
	RETRIEVE_PURCHASED_PRODUCT_CHATBOT = 'Retrieves purchased chatbot product. Sets the expiry date. TOTP code required\n\n',
	EDIT_SNIPPET_BY_ID = 'Edits snippet by id. Auth required\n\n',
	DELETE_SNIPPET_BY_ID = 'Deletes snippet by id. Auth required\n\n',
	DELETE_SNIPPET_BY_IDS_SNIPPET = 'Deletes snippet by ids snippets. Auth required\n\n',
	GET_SNIPPET_BY_ID = 'Returns snippets. If ChatbotIDs is not provided searches by all users chatbots.For search just provide search query param it will search by prompt completion and uri Auth required\n\n',
	GET_REQUEST_HISTORY_BY_IDs = 'Returns snippets. If ChatbotIDs is not provided searches by all users chatbots. Auth required\n\n',
	ASK_GPT_CHAT = 'Returns answer for your prompt and link for answer. Auth required\n\n',
	CREATE_SNIPPET = 'Creates snippet. Auth required\n\n',
	START_VECTORISE = 'Starts vectorise. Auth required\n\n',
	GOOGLE_AUTH = 'Takes google credential, if user with this email exists returns user jwt, if not creates new user and returns its jwt\n\n',
	GOOGLE_AUTH_ACCESS_TOKEN = 'Sign in with google access token\n\n',
	GITHUB_AUTH = "This endpoint redirects to github auth page.\n\n DONT FETCH IT, JUST OPEN THE LINK IN BROWSER. \n\n OnClick = window.location.replace('https://api(or dev).coderfy.com/auth/github/(chatbot || content)').\n\n After successfull auth github redirects to /auth/github/callback with code in query params. \n\n Then if code is valid you will be redirected to your website /token/eyJfsefre... (JWT token) after that I guess you need to take this token and get userInfo \n\n",
	GITHUB_CALLBACK_AUTH = 'Takes code from github auth and redirects to token/eyKvfOt...\n\n',
	GITHUB_CALLBACK_AUTH_CODE = 'Code from github auth\n\n',
	FACEBOOK_SOURCE = 'this field is responsible for the url where user will be redirected after successfull auth\n\n For example: If source is https://content-generator.coderfy.com then user will be redirected to https://content-generator.coderfy.com/token/eysFOm...\n\n',
	FACEBOOK_CALLBACK_AUTH_CODE = 'Code from facebook auth\n\n Later it will be used to get access token\n\n',
	FACEBOOK_CALLBACK_AUTH_STATE = 'This field allows to send some data to the callback endpoint. For example if you want to redirect user to the page where he was before auth you can pass this page url in state field and then redirect user to this page after auth is completed\n\n',
	CHATBOT_FOOTER = 'Returns chatbot footer. Used to display chatbot footer on the website',
	REFUND_PURCHASED_PRODUCT_CONTENT = 'Refund purchased content product. TOTP code required\n\n',
	GET_SCRIPT_FOR_CHATBOT = 'We return script for the chatbot by its ID',
}
